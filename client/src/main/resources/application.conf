# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver = org.postgresql.Driver
db.default.url = "jdbc:postgresql://localhost/balloooon"
db.default.username = balloooon
db.default.password = 123

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false


akka {
  loglevel = "DEBUG"
  //log-config-on-start = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
      lifecycle = on
      autoreceive = on
      unhandled = on
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 9010
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://application@127.0.0.1:2551"
    ]
    roles = [frontend]
    auto-down-unreachable-after = 10s
  }
}

akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]

akka.actor.deployment {
  /PlayerSocket/PlayerRouter {
    router = consistent-hashing-group
    routees.paths = ["/user/player"]
    cluster {
      enabled = on
      allow-local-routees = off
      //      use-role = compute
    }
  }
}